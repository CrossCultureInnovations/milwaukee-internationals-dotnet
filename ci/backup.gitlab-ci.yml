image: docker:latest
services:
  - name: docker:dind
    alias: docker

variables:
  HEROKU_API_KEY: $HEROKU_TOKEN
  APP_NAME: "milwaukee-internationals-core"
  HEROKU_EMAIL: "hesamian@uwm.edu"
  AWS_DEFAULT_REGION: "us-east-1"
  AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  BUCKET_NAME: milwaukee-internationals-backup

capture-backup:
  stage: deploy
  resource_group: heroku
  only:
    - master
  allow_failure: false
  before_script:
    - apk --no-cache add curl nodejs npm
    - npm install -g heroku
  script:
    - export CI_JOB_TIMESTAMP=$(date --utc +"%Y-%m-%dT%H_%M_%SZ")
    - export DB_DUMP_NAME="$CI_JOB_TIMESTAMP.dump" && echo "DB_DUMP_NAME=$DB_DUMP_NAME" >> backup.env
    - heroku pg:backups:capture --app $APP_NAME
    - heroku pg:backups:url --app $APP_NAME | xargs -I{} curl -o "$DB_DUMP_NAME" "{}"
  artifacts:
    paths:
      - backup.env
      - "*.dump"

upload-backup:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  only:
    - master
  allow_failure: false
  before_script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set default.region $AWS_DEFAULT_REGION
  script:
    - export $(cat backup.env | xargs)
    - echo $DB_DUMP_NAME
    - aws s3 cp $DB_DUMP_NAME s3://$BUCKET_NAME/$DB_DUMP_NAME
  needs:
    - job: capture-backup
      artifacts: true
