@using API.Extensions
@using API.Interfaces
@using API.Utilities
@using Microsoft.Extensions.Hosting
@using Models.Constants
@using Models.Enums
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment Env
@inject IHttpRequestUtilityBuilder RequestUtilityBuilder;
@inject CacheBustingUtility CacheBustingUtility;
@inject GlobalConfigs GlobalConfigs;
@using static Models.Constants.ApiConstants

@{
    var utility = RequestUtilityBuilder.For(Context);
    var userInfo = await utility.GetUserInfo();
    var cacheBustingKey = CacheBustingUtility.CacheBustingKey();
    var yearContext = GlobalConfigs.YearValue;
    var themes = ApplicationConstants.Themes;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title> @(!string.IsNullOrWhiteSpace(ViewBag.Title) ? ViewBag.Title : ApplicationName) </title>
    
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">

    @* jQuery*@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@@prestashop-core/jquery.live-polyfill@1/dist/jquery.live-polyfill.min.js"></script>

    @* angular *@
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>

    @* bootstrap *@
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    @* angular + bootstrap toggle *@
    <link href="https://cdn.jsdelivr.net/npm/angular-bootstrap-toggle@0.1.2/dist/angular-bootstrap-toggle.min.css" rel="stylesheet"/>
    <script src="https://cdn.jsdelivr.net/npm/angular-bootstrap-toggle@0.1.2/dist/angular-bootstrap-toggle.min.js"></script>

    @if (!string.IsNullOrEmpty(GlobalConfigs.CurrentTheme) && !"default".Equals(GlobalConfigs.CurrentTheme, StringComparison.CurrentCultureIgnoreCase))
    {
        <link rel="stylesheet" href="~/styles/themes/@(themes[GlobalConfigs.CurrentTheme])?@cacheBustingKey"/>
    }

    @* Input validator *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://raw.githack.com/sandrocaseiro/jquery.validate.unobtrusive.bootstrap/master/jquery.validate.unobtrusive.bootstrap.min.js"></script>

    @* angular select *@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-select/0.20.0/select.min.css" rel="stylesheet"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-select/0.20.0/select.min.js"></script>

    @* tags input *@
    <link rel="stylesheet" href="https://mbenford.github.io/ngTagsInput/css/ng-tags-input.min.css"/>
    <script src="https://mbenford.github.io/ngTagsInput/js/ng-tags-input.min.js"></script>

    @* string to table *@
    <script src="https://cdn.rawgit.com/dtao/string-table/master/stringTable.js"></script>

    @* PDF engine *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.0.0/polyfills.umd.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.0.0/jspdf.umd.min.js"></script>

    @* TextEditor *@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.10/summernote.css" rel="stylesheet"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.10/summernote.min.js"></script>

    @* Table Sort *@
    <script src="https://cdn.jsdelivr.net/npm/angular-tablesort@1.6.1/js/angular-tablesort.min.js"></script>

    @* customs *@
    @if (Env.IsProduction())
    {
        <script src="~/scripts/script.min.js?@cacheBustingKey"></script>
        <link rel="stylesheet" href="~/styles/style.min.css?@cacheBustingKey">
    }
    else
    {
        <script src="~/scripts/script.js?@cacheBustingKey"></script>
        <link rel="stylesheet" href="~/styles/style.css?@cacheBustingKey">
    }
</head>
<body>

<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="~/">
                @ApplicationName
                
                @if (utility.IsAuthenticated())
                {
                    <sub>
                        <span class="badge">@yearContext</span>
                    </sub>
                }
            </a>
        </div>
        <div class="collapse navbar-collapse" id="myNavbar">
            <ul class="nav navbar-nav">
                <li class="@(ViewContext.RouteData.Matches("Home") ? "active" : "")">
                    <a href="/">Register for Tour</a>
                </li>

                @if (utility.IsAuthenticated())
                {
                    <li class="dropdown @(ViewContext.RouteData.MatchesAnyController("User", "Student", "Driver", "Host", "Event") ? "active" : "")">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">Listing <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li>
                                <a href="~/User">Users</a>
                            </li>
                            <li>
                                <a href="~/Student">Students</a>
                            </li>
                            <li>
                                <a href="~/Driver">Drivers</a>
                            </li>
                            <li>
                                <a href="~/Host">Hosts</a>
                            </li>

                            @if (GlobalConfigs.EventFeature)
                            {
                                <li>
                                    <a href="~/Event">Events</a>
                                </li>
                            }
                        </ul>
                    </li>

                    <li class="dropdown @(ViewContext.RouteData.MatchesAnyController("Registration") ? "active" : "")">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">Registration <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li>
                                <a href="~/Registration/Driver">Register Driver</a>
                            </li>
                            <li>
                                <a href="~/Registration/Host">Register Host</a>
                            </li>
                        </ul>
                    </li>

                    <li class="@(ViewContext.RouteData.Matches("Students") ? "active" : "")">
                        <a href="~/Student">Students</a>
                    </li>

                    <li class="@(ViewContext.RouteData.Matches("Mapping", "StudentDriverMapping") ? "active" : "")">
                        <a href="~/Mapping/StudentDriverMapping">Driver Mapping</a>
                    </li>

                    <li class="@(ViewContext.RouteData.Matches("Mapping", "DriverHostMapping") ? "active" : "")">
                        <a href="~/Mapping/DriverHostMapping">Host Mapping</a>
                    </li>

                    <li class="@(ViewContext.RouteData.Matches("Attendance", "Driver") ? "active" : "")">
                        <a href="~/Attendance/Driver">Driver Attendance</a>
                    </li>

                    <li class="@(ViewContext.RouteData.Matches("Attendance", "Student") ? "active" : "")">
                        <a href="~/Attendance/Student">Manage Tour</a>
                    </li>
                }
            </ul>

            <ul class="nav navbar-nav navbar-right">
                @if (!utility.IsAuthenticated())
                {
                    <li>
                        <a href="~/Identity/login"><span class="glyphicon glyphicon-log-in"></span> Login</a>
                    </li>
                }
                else
                {
                    if (userInfo.UserRoleEnum == UserRoleEnum.Admin)
                    {
                        <li class="dropdown">
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#">Admin Panel <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li class="@(ViewContext.RouteData.Matches("Utility", "Email") ? "active" : "")">
                                    <a href="~/Utility/AdHocEmail">Email Utility</a>
                                </li>

                                <li class="@(ViewContext.RouteData.Matches("Config") ? "active" : "")">
                                    <a href="~/Config">Configuration</a>
                                </li>
                            </ul>
                        </li>
                    }
                    <li>
                        <a href="~/Profile"><span class="glyphicon glyphicon-user"></span> Profile</a>
                    </li>
                    <li>
                        <a href="~/Identity/Logout"><span class="glyphicon glyphicon-log-out"></span> Logout</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</nav>

<div class="container" ng-app="tourApp" ng-cloak>

    @foreach (var errorMessage in ViewData.ModelState.Values.SelectMany(modelState => modelState.Errors).Select(x => x.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade in">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">x</a>
            <strong>Error!</strong> @errorMessage
        </div>
    }

    @RenderBody()
</div>

<div class="clearfix">
    <br/>
</div>
<br/>
<br/>

</body>
</html>